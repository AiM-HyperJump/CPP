#include <iostream>
#include <ctime>
#include <fstream>

using namespace std;

char pass[6], str[86]{"0123456789~!@#$%^&*()_-=+[{}]\\/<>?"};
int R;

void generate(){
  int i, R, RN=1, b=0, B=0, c=0, s=0, FlagNext;
  for (i=0; i<6; i++){
    RN=abs(RN-abs(rand()-R)) % 86;
    FlagNext=1;
    pass[i]=str[RN];
    if (i>0){
      if(pass[i]==pass[i-1])//запрет одинаковых символов
        i--;
      else if (pass[i] >= 'a' && pass[i] <= 'z' && pass[i] == pass[i-1]+32)//запрет на одинаковые буквы разного регистра аА vV hH pP
        i--;
      else  if (pass[i] >= 'A' && pass[i] <= 'Z' && pass[i] == pass[i-1]-32)//запрет на одинаковые буквы разного регистра Ff Tt Bb Nn
        i--;
      else  if ((pass[i] > 'A' && pass[i] < 'Z' && pass[i] == pass[i-1]-1) || (pass[i] > 'a' && pass[i] < 'z' && pass[i] == pass[i-1]-1))//запрет на соседние буквы алфавита (BA ba)
        i--;
      else  if ((pass[i] > 'A' && pass[i] < 'Z' && pass[i] == pass[i-1]+1) || (pass[i] > 'a' && pass[i] < 'z' && pass[i] == pass[i-1]+1))//запрет на соседние буквы алфавита (AB ab)
        i--;
      else if (pass[i] > '0' && pass[i] <= '9' && pass[i] == pass[i-1]-1)//запрет на подряд идущие цифры 12 45 89 01
        i--;
      else if (pass[i] >= '0' && pass[i] < '9' && pass[i] == pass[i-1]+1)//запрет на подряд идущие цифры 21 98 65 10
        i--; 
    }
    if (i == 5 && (b == 0 || B == 0 || c == 0 || s == 0))//если отсутствует какая-либо категория символов в пароле, то генерить заного
      i=B=b=c=s=FlagNext=0;
    if (FlagNext == 1){    
    	if (pass[i] >= 'a' && pass[i] <= 'z')//счетчик маленьких букв
      		b++;
    	else if (pass[i] >= 'A' && pass[i] <= 'Z')//счетчик больших букв
      		B++;
    	else if (pass[i] >= '0' && pass[i] <= '9')//счетчик цифр
      		c++;
    	else s++;    //счетчик знаков
    }
  } 
}

int main() {
  int faults =0;
  int num, inum, passnum;
  cout << "сколько сейчас паролей: ";
  cin >> passnum;
  cout << "Введите число новых паролей: ";
  cin >> num;
  srand(time(NULL));
  cout << "Введите рандомизатор: ";
  cin >> R;
  for(inum=0; inum<num; inum++){
    char buf[7];
    int i, j=0;
    for (i=34; i<60; i++){
      
       str[i]='a'+j;//дополнение алфавита маленькими буквами
      
       j++;}
    
    j=0;
    
    for (i=60; i<86; i++){
      
       str[i]='A'+j;//заполнение алфавита большими буквами
      
       j++;}
    int flag=0, k, kk;
    while (flag!=1){//пока все проверки не будут пройдены
      generate();
      kk=0;
      ifstream F("passlist.txt");
      for (i=0; i<passnum+inum+num; i++){
        k=0;//счетчик совпадений в слове
        j=0;//счетчик числа букв в пароле
        F >> buf;//читать из файл следующий пароль
        while (j<6){//пока не дочитали текущий пароль
          if (buf[j] == pass[j])//если текущий символ сгенерированного пароля совпадает с символом пароля из списка
            k++;//инкремент совпадений
          j++;//следующая буква
          }
        if (k>1)//если совпадений больше 1
          kk++;//показатель уникальности
      }
      if (kk==0){//если уникальный пароль сгенерирован
        flag = 1;//значит все четко
        F.close();//закрой рот (файл)
      }
      else 
        faults++;
    }
    cout << pass << endl;//вывести пороль
    ofstream F("passlist.txt", ios_base::app);//открыть список и поставить указатель в конец
    F << endl <<pass;//записать в список
  }
  cout<<endl<<"Число ошибок: "<< faults<<endl;
  return 0;
}
